{====================================================
Test Program 3.pal 
Tests: Semantic Errors
Written by: Group 4
-----------------------------------

Location and Description of Errors
-----------------------------------
On line 65, trying to declare a variable type itself. 
On line 104, nonsense logical statement.
Finally, on line 122 there is an attempt to reassign the value of a const.

=====================================================}

program Semantic1 (input, output);


{ Constant Declarations }
const
        a = 1;
        b = 2;
        c = 3;
        astring = 'halloween';
        bstring = 'christmas';
        abool = true;
        bbool = false;
        areal = 5.0E1234;
        breal = 0.9E+5;
        alogic = not abool;
        blogic = abool or bbool;
        remainder = c mod b;
        clogic = remainder < 0;  
        neg = -10;
        negreal = -2.33E10;
        weird = '\n\n\n\t \t there is \n so \t me good \' stuff';
        multiPL = areal * breal;    


{ Type Declarations }
type
        string = array[1..3] of char;
        int = integer;
        info = record
                        name : string;
                        age : int;
                        gender : char
                   end;

        infoarray = array[1..10] of info;  
        
        detailedinfo = record
                        favfood : string;
                        myinfo : infoarray
                   end;
                  
        ultimatepower = record                        
                        radical : detailedinfo;
                        awesome : real
                   end;

        hood = array[1..10] of int;
        hood1 = array[1..10] of hood;
        hood2 = array[1..10] of hood1;
        hood3 = array[1..10] of hood2;
	hood4 = hood4;		{ error - attemping to give a type of itself }
##semantic:65: Type 'hood4' has not been declared.
        
        counting = ultimatepower;

       
{ Variable Declarations }
var
        hoops : counting;
        loops : ultimatepower;
        stars : detailedinfo;
        strang : detailedinfo;
        quality : real;
        pro : string;
        tell : string;
        apples : real;
        bananas : hood3;
        peaches : info;
        heading : int;

{ Tests scope checking of variables }
procedure LittleProc ( var gimme : int; please : ultimatepower );
var
        shirts : int;
        shoes : integer;
        none : ultimatepower;
        service : real;
        apples : int;
        bananas : ultimatepower;

begin

        shirts := gimme;
        bananas := please;
        
        if shirts < 0 then
           begin
                apples := a + neg;
                if apples < 0 then
                   begin
                        apples := not ( apples - 1 ); { error - nonsense logic }
##semantic:104: Invalid operand for unary operator 'not' - expected type boolean
                        apples := apples + 1;
                   end;
           end
        else
                apples := 99;
                  
        
end;
       

{ Begin Main }	
begin
        quality := areal + breal;
        pro := 'yup';
        
        quality := quality + a - b - c;
        
        abool := bbool;         { error - trying to reassign a constant }
##semantic:122: cannot reassign constant 'abool'

       
end. 