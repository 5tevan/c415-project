//test type declarations
//3-5 errors 

program typetest( input, output );

type
	string	= array[1..7] of char;
	int2	= integer;
	bool3	= ( TRUE3, FALSE3, UNDEF3 );
	bool2	= Boolean;
	rec1	= record
		name : string;
		age  : integer
		end;
	rec2	= record
		person	: rec1;
		hobby	: string
		end;

	ar = array[1...2] of integer; 			//ERROR, É is invalid
	ar = array[1.2] of integer; 
	ar = array[1 or 2.. not 2 = 2] of integer; 
	ar = array[1 or not 2.. 2 and 2] of integer; 

	str3 = array[1..3] of char;
	ar = ARRAY[1..2] of integer; 			//ERROR, ARRAY is invalid
	chrar = array[char] of integer;
	list = array[(red, green, blue)] of integer; 	//is this an ERROR?
	list2 = array[bool3] of integer;
	list3 = array['asdf'] of integer;		 //might be a syntactic ERROR?, string is not a valid indexing type?
	blah = array[(one)] of integer;			 //ERROR, is this a scalar list or an expression?

var	x	: integer;
	y	: ( RED, GREEN, BLUE );
	z	: bool3;
	xx	: array[0..15] of bool3;
   
function happy( alpha: bool3; beta: string; gamma: bool2 ) : string;
begin
	{* happy always returns happy *}
	return( 'happy' )
end;

function main() : string;
var w : real;
begin
	if( PI < x ) then
	begin
		w := ONE;
		return( happy( z, 'unused', (0 <> 1) ) )
	end
	else
		return( SAD )
end;

{* program entry *}
begin
	read( x );	// read int
	write( main() );
	writeln('')
end.

