{====================================================
Test Program 9.pal - errors from test 8 & 
Written by: Group 4
-----------------------------------

Description
-----------------------------------
 On line 42 - attempted redeclaration of a record.
 On line 48 - duplicate record member.
 On line 54 - incorrect array indicies && type already declared
 On line 56 - incorrect array indicies
 On line 59 - using ARRAY instead of lowercase array reserve word
 On line 65 - function declaration asks for an unknown type
 On line 67 - function tries to return a real value, when it's declaration states int
 On line 72 - trying to assign a vale from an undeclared variable
 On line 73 - trying to assign a new value to a const
 On line 74 - trying to assign a value to a record member which doesn't exists
 On line 75 - trying to assign a value to a type

=====================================================}

program testing(input, output);

const
	okay = 'a {comment inside a string?} a';
	yup = 2;

type
	bubble = integer;
	hark = array[1..7] of array[1..8] of char;
	harken = hark;
	myrec = record
       a : integer { ERROR - missing semicolon };
	   c : char
	end;
	
	 secondtry = record
		a2 : integer;
		b2 : real;
		c2 : harken
	 end;
	myrec = array[1..3] of char; { ERROR - redefining a type }
	
	thirdtry = record
		a3 : integer;
		b3 : real;
		c3 : char;
		c3 : boolean	{ ERROR - duplicate field in record }
	end;
	 
	anonEnum = (sad, mad, glad, bad);
	arr1 = array[1..5] of integer;
	arr2 = array[5..5] of char;
	arr2 = array[5..-1] of char;	{ ERROR - incorrect array indicies && same name }
	arr3 = array[sad..bad] of integer;
	arr4 = array[bad..sad] of char;   { ERROR - incorrect array indicies }
     
var 
    bigray : ARRAY[1..99] of char; { ERROR - array is only a reserve word in lowercase }
	{}{}{}{}{}{}{}{}{}{}{}{}{many comments on same line}
	{{// // // //}	{very odd nested comments}
	mareal : real;
	arec : thirdtry;
	
function badfunc(okie : maint) : integer;
begin
    badfunc := 99.999;		{ ERROR - trying to return a real value when func should return an int }
end;
    
begin
	mareal := 0.99;
	maint := mareal;	{ ERROR - assigning a real to an int }
	yup := 3;
	arec.f := 1;	{ ERROR - there is no field 'f' in type thirdtry }
	arr1[1] := yup;
end.